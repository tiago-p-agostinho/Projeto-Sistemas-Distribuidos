
package pt.largacaixa.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LargaCaixaPortType", targetNamespace = "http://ws.largacaixa.pt/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LargaCaixaPortType {


    /**
     * 
     * @param preco
     * @param caixa
     * @param cid
     * @param dados
     * @throws ConteudoInvalido
     * @throws CaixaInexistente
     */
    @WebMethod
    @RequestWrapper(localName = "criarConteudo", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.CriarConteudoType")
    @ResponseWrapper(localName = "criarConteudoResponse", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.CriarConteudoResponseType")
    public void criarConteudo(
        @WebParam(name = "cid", targetNamespace = "")
        String cid,
        @WebParam(name = "caixa", targetNamespace = "")
        String caixa,
        @WebParam(name = "preco", targetNamespace = "")
        int preco,
        @WebParam(name = "dados", targetNamespace = "")
        byte[] dados)
        throws CaixaInexistente, ConteudoInvalido
    ;

    /**
     * 
     * @param caixa
     * @param cid
     * @throws CaixaInexistente
     * @throws ConteudoInexistenteNaCaixa
     */
    @WebMethod
    @RequestWrapper(localName = "apagarConteudo", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.ApagarConteudoType")
    @ResponseWrapper(localName = "apagarConteudoResponse", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.ApagarConteudoResponseType")
    public void apagarConteudo(
        @WebParam(name = "cid", targetNamespace = "")
        String cid,
        @WebParam(name = "caixa", targetNamespace = "")
        String caixa)
        throws CaixaInexistente, ConteudoInexistenteNaCaixa
    ;

    /**
     * 
     * @param caixa
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws CaixaInexistente
     */
    @WebMethod
    @WebResult(name = "conteudo", targetNamespace = "")
    @RequestWrapper(localName = "listarConteudos", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.ListarConteudosType")
    @ResponseWrapper(localName = "listarConteudosResponse", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.ListarConteudosResponseType")
    public List<String> listarConteudos(
        @WebParam(name = "caixa", targetNamespace = "")
        String caixa)
        throws CaixaInexistente
    ;

    /**
     * 
     * @param caixa
     * @param cid
     * @return
     *     returns byte[]
     * @throws CaixaInexistente
     * @throws ConteudoInexistenteNaCaixa
     */
    @WebMethod
    @WebResult(name = "dados", targetNamespace = "")
    @RequestWrapper(localName = "obterConteudo", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.ObterConteudoType")
    @ResponseWrapper(localName = "obterConteudoResponse", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.ObterConteudoResponseType")
    public byte[] obterConteudo(
        @WebParam(name = "cid", targetNamespace = "")
        String cid,
        @WebParam(name = "caixa", targetNamespace = "")
        String caixa)
        throws CaixaInexistente, ConteudoInexistenteNaCaixa
    ;

    /**
     * 
     * @param comprovativoPagamento
     * @param caixaDestino
     * @param caixaOrigem
     * @param cid
     * @throws ComprovativoRejeitado
     * @throws CaixaInexistente
     * @throws ConteudoInexistenteNaCaixa
     */
    @WebMethod
    @RequestWrapper(localName = "partilharConteudo", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.PartilharConteudoType")
    @ResponseWrapper(localName = "partilharConteudoResponse", targetNamespace = "http://ws.largacaixa.pt/", className = "pt.largacaixa.ws.PartilharConteudoResponseType")
    public void partilharConteudo(
        @WebParam(name = "cid", targetNamespace = "")
        String cid,
        @WebParam(name = "caixaOrigem", targetNamespace = "")
        String caixaOrigem,
        @WebParam(name = "caixaDestino", targetNamespace = "")
        String caixaDestino,
        @WebParam(name = "comprovativoPagamento", targetNamespace = "")
        Object comprovativoPagamento)
        throws CaixaInexistente, ComprovativoRejeitado, ConteudoInexistenteNaCaixa
    ;

}
